import matplotlib.pyplot as plt

# Original supply and demand data
original_demand = [100, 90, 80, 70, 60, 50, 40, 30, 20, 10]
original_supply = [10, 20, 30, 40, 50, 60, 70, 80, 90, 100]

# Decreased supply data
new_supply = [5, 15, 25, 35, 45, 55, 65, 75, 85, 95]

# Equilibrium quantity and price
original_eq_quantity = original_supply[0]
original_eq_price = original_demand[0]
new_eq_quantity = new_supply[0]
new_eq_price = original_demand[1]  # New intersection point with decreased supply

# Plotting the original supply and demand curves
plt.plot(original_supply, original_demand, label='Original Supply')
plt.xlabel('Quantity')
plt.ylabel('Price')
plt.title('Supply-Demand Graph (Original)')

# Plotting the new supply curve (decreased supply)
plt.plot(new_supply, original_demand, label='New Supply')

# Plotting the equilibrium points
plt.scatter(original_eq_quantity, original_eq_price, color='red', label='Original Equilibrium')
plt.scatter(new_eq_quantity, new_eq_price, color='green', label='New Equilibrium')

# Drawing the equilibrium price lines
plt.axhline(original_eq_price, linestyle='--', color='red')
plt.axhline(new_eq_price, linestyle='--', color='green')

# Adding annotations
plt.annotate(f'({original_eq_quantity}, {original_eq_price})', (original_eq_quantity, original_eq_price),
             textcoords="offset points", xytext=(10, 10), ha='center')
plt.annotate(f'({new_eq_quantity}, {new_eq_price})', (new_eq_quantity, new_eq_price),
             textcoords="offset points", xytext=(10, 10), ha='center')

# Adding legend
plt.legend()

# Displaying the graph
plt.show()